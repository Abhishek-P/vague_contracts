setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
source("../helpers.R")
# load core dataset
d <- read_csv("../../results/1_falseconsensus/main-merged.csv")
# load extra information
metadata = read_csv("../../experiments/1_falseconsensus/main/stimuli.csv") %>%
select(Title, version, locus_of_uncertainty, locus_of_uncertainty_location,name_gender) %>%
rename(title=Title)
d = d %>%
left_join(metadata,by=c("title","version"))
nonEnglishNativeLanguages <- c("Chinese", "Spanish", "spanish", "Punjabi", "Filipino", "Urdu")
excludedWorkers_nonNative <- unique((d %>%
filter(subject_information.language %in% nonEnglishNativeLanguages))$workerid)
excludedWorkers <- (d %>%
filter((version == "unambiguous_uncovered" & individual_judgment == "yes") |
(version == "unambiguous_covered" & individual_judgment == "no")) %>%
group_by(workerid) %>%
summarise(n = n()) %>%
filter(n > 1))$workerid
d <- d %>%
filter(!(workerid %in% excludedWorkers)) %>%
filter(!(workerid %in% excludedWorkers_nonNative))
transformed <- d %>%
select(workerid,title,version,individual_judgment,population_judgment,confidence,locus_of_uncertainty,locus_of_uncertainty_location,name_gender) %>%
group_by(version,title) %>%
mutate(total = n()) %>%
ungroup() %>%
group_by(version,title,individual_judgment,locus_of_uncertainty_location,name_gender) %>%
mutate(count = n()) %>%
mutate(true_proportion = binom.confint(x = count, n  = total, methods = "exact")$mean * 100,
ci_low = binom.confint(x = count, n  = total, methods = "exact")$lower * 100,
ci_high = binom.confint(x = count, n  = total, methods = "exact")$upper * 100,
agreement_mean = mean(population_judgment)) %>%
mutate(difference = as.numeric(population_judgment) - true_proportion) %>%
mutate(versionPretty = factor(version))
levels(transformed$versionPretty)
levels(transformed$versionPretty) <- c("Controversial", "Covered", "Not\ncovered")
# how many of each type of item
items = unique(transformed[,c("locus_of_uncertainty_location","title")])
table(items$locus_of_uncertainty_location)
transformed %>%
group_by(version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
transformed %>%
ggplot(aes(x = difference, fill = versionPretty)) +
geom_histogram(position="identity", alpha = 0.3) +
xlab("Participant error") +
ylab("Count") +
labs(fill='Condition') +
theme_bw() +
theme(legend.position = "top",
text = element_text(size=8)) +
guides(fill=guide_legend(nrow=1,byrow=TRUE))
ggsave("viz/errorHist.pdf", width = 3, height = 3, units = "in")
responseProportionsByItem <- transformed %>%
group_by(version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
transformed %>%
group_by(version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
transformed %>%
group_by(version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
transformed %>%
ggplot(aes(x = difference, fill = versionPretty)) +
geom_histogram(position="identity", alpha = 0.3) +
xlab("Participant error") +
ylab("Count") +
labs(fill='Condition') +
theme_bw() +
theme(legend.position = "top",
text = element_text(size=8)) +
guides(fill=guide_legend(nrow=1,byrow=TRUE))
ggsave("viz/errorHist.pdf", width = 3, height = 3, units = "in")
ggsave("graphs/errorHist.pdf", width = 3, height = 3, units = "in")
transformed %>%
ggplot(aes(x = individual_judgment, y = as.numeric(population_judgment))) +
facet_wrap(version ~ title) +
geom_point(alpha = 0.5, show.legend = FALSE, aes(colour = individual_judgment),
position = position_nudge(x = +0.1)) +
theme_bw() +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1, colour = "red",
position = position_nudge(x = +0.1)) +
stat_summary(fun = mean, shape = 18, size = 1, geom = "point", colour = "red",
position = position_nudge(x = +0.1)) +
stat_summary(fun=mean, geom="label", aes(label = round(..y..,2), hjust = -0.25),
position = position_nudge(x = +0.1)) +
geom_errorbar(aes(ymin=ci_low, ymax=ci_high),
width=.1,                    # Width of the error bars
position=position_nudge(-0.1)) +
geom_point(aes(y = true_proportion), shape = 18, size = 3,
position = position_nudge(-0.1)) +
geom_text(aes(y = true_proportion, label = round(true_proportion, digits = 2)),
position=position_nudge(-0.25)) +
ylab("Distribution of responses (and estimates), %") +
xlab("Individual judgment") +
ggtitle("Comparing real vs. estimated consensus")
fisherTest <- oneSamplePermutationTest((transformed %>% filter(version == "controversial"))$difference,
alternative = "greater", mu = 0, exact = FALSE,
n.permutations = 10000, seed = NULL)
# bar plot of response proportions alongside agreement estimates
props = transformed %>%
mutate(Yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
No = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
CantDecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
group_by(version) %>%
summarise(ProportionYes = mean(Yes), YesCILow=ci.low(Yes), YesCIHigh=ci.high(Yes),
ProportionNo = mean(No), NoCILow=ci.low(No), NoCIHigh=ci.high(No),
ProportionCantDecide = mean(CantDecide), CantDecideCILow=ci.low(CantDecide), CantDecideCIHigh=ci.high(CantDecide)) %>%
ungroup() %>%
mutate(YesYMin=ProportionYes-YesCILow,YesYMax=ProportionYes+YesCIHigh,
NoYMin=ProportionNo-NoCILow,NoYMax=ProportionNo+NoCIHigh,
CantDecideYMin=ProportionCantDecide-CantDecideCILow,CantDecideYMax=ProportionCantDecide+CantDecideCIHigh)
View(props)
yes = props %>%
select(version,ProportionYes,YesYMax,YesYMin) %>%
rename(Proportion=ProportionYes,YMax=YesYMax,YMin=YesYMin) %>%
mutate(Response="yes",ResponseType="individual")
# plot just histograms of "yes" response proportions
d_yes_props = unique(transformed[,c("true_proportion","title","version","individual_judgment")]) %>%
filter(individual_judgment=="yes") %>%
droplevels()
View(d_yes_props)
# plot proportions of "yes" responses by condition and item
d_yes_byitem = unique(transformed[,c("true_proportion","title","version","individual_judgment")]) %>%
filter(individual_judgment=="yes") %>%
droplevels()
as_tibble(d_yes_byitem) %>%
mutate(Condition = fct_relevel(as.factor(version),"unambiguous_covered","controversial")) %>%
ggplot(aes(x=Condition,y=true_proportion)) +
geom_point() +
geom_line(aes(group=1)) +
facet_wrap(~title)
transformed %>%
group_by(version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
responseProportionsByItem <- transformed %>%
group_by(title,condition) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
responseProportionsByItem <- transformed %>%
group_by(title,version)
responseProportionsByItem <-transformed %>%
group_by(title,version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
View(responseProportionsByItem)
transformed <- d %>%
select(workerid,title,version,individual_judgment,population_judgment,confidence,locus_of_uncertainty,locus_of_uncertainty_location,name_gender) %>%
group_by(version,title) %>%
mutate(total = n()) %>%
ungroup() %>%
group_by(version,title,individual_judgment,locus_of_uncertainty_location,name_gender) %>%
mutate(count = n()) %>%
mutate(true_proportion = binom.confint(x = count, n  = total, methods = "exact")$mean * 100,
ci_low = binom.confint(x = count, n  = total, methods = "exact")$lower * 100,
ci_high = binom.confint(x = count, n  = total, methods = "exact")$upper * 100,
agreement_mean = mean(population_judgment)) %>%
mutate(difference = as.numeric(population_judgment) - true_proportion) %>%
mutate(versionPretty = factor(version))
View(transformed)
levels(transformed$versionPretty)
levels(transformed$versionPretty) <- c("Controversial", "Covered", "Not\ncovered")
# how many of each type of item
items = unique(transformed[,c("locus_of_uncertainty_location","title")])
table(items$locus_of_uncertainty_location)
transformed %>%
group_by(version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
transformed %>%
ggplot(aes(x = difference, fill = versionPretty)) +
geom_histogram(position="identity", alpha = 0.3) +
xlab("Participant error") +
ylab("Count") +
labs(fill='Condition') +
theme_bw() +
theme(legend.position = "top",
text = element_text(size=8)) +
guides(fill=guide_legend(nrow=1,byrow=TRUE))
# bar plot of response proportions alongside agreement estimates
props = transformed %>%
mutate(Yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
No = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
CantDecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
group_by(version) %>%
summarise(ProportionYes = mean(Yes), YesCILow=ci.low(Yes), YesCIHigh=ci.high(Yes),
ProportionNo = mean(No), NoCILow=ci.low(No), NoCIHigh=ci.high(No),
ProportionCantDecide = mean(CantDecide), CantDecideCILow=ci.low(CantDecide), CantDecideCIHigh=ci.high(CantDecide)) %>%
ungroup() %>%
mutate(YesYMin=ProportionYes-YesCILow,YesYMax=ProportionYes+YesCIHigh,
NoYMin=ProportionNo-NoCILow,NoYMax=ProportionNo+NoCIHigh,
CantDecideYMin=ProportionCantDecide-CantDecideCILow,CantDecideYMax=ProportionCantDecide+CantDecideCIHigh)
View(props)
View(d)
rm(list = ls())
library(tidyverse)
library(jsonlite)
library(Hmisc)
library(binom)
library(brms)
library(EnvStats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
source("../helpers.R")
# load core dataset
d <- read_csv("../../results/1_falseconsensus/main-merged.csv")
# load extra information
metadata = read_csv("../../experiments/1_falseconsensus/main/stimuli.csv") %>%
select(Title, version, locus_of_uncertainty, locus_of_uncertainty_location,name_gender) %>%
rename(title=Title)
d = d %>%
left_join(metadata,by=c("title","version"))
nonEnglishNativeLanguages <- c("Chinese", "Spanish", "spanish", "Punjabi", "Filipino", "Urdu")
excludedWorkers_nonNative <- unique((d %>%
filter(subject_information.language %in% nonEnglishNativeLanguages))$workerid)
excludedWorkers <- (d %>%
filter((version == "unambiguous_uncovered" & individual_judgment == "yes") |
(version == "unambiguous_covered" & individual_judgment == "no")) %>%
group_by(workerid) %>%
summarise(n = n()) %>%
filter(n > 1))$workerid
d <- d %>%
filter(!(workerid %in% excludedWorkers)) %>%
filter(!(workerid %in% excludedWorkers_nonNative))
transformed <- d %>%
select(workerid,title,version,individual_judgment,population_judgment,confidence,locus_of_uncertainty,locus_of_uncertainty_location,name_gender) %>%
group_by(version,title) %>%
mutate(total = n()) %>%
ungroup() %>%
group_by(version,title,individual_judgment,locus_of_uncertainty_location,name_gender) %>%
mutate(count = n()) %>%
mutate(true_proportion = binom.confint(x = count, n  = total, methods = "exact")$mean * 100,
ci_low = binom.confint(x = count, n  = total, methods = "exact")$lower * 100,
ci_high = binom.confint(x = count, n  = total, methods = "exact")$upper * 100,
agreement_mean = mean(population_judgment)) %>%
mutate(difference = as.numeric(population_judgment) - true_proportion) %>%
mutate(versionPretty = factor(version))
proportionsByItem %>%
group_by(title,version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
proportionsByItem <- transformed %>%
group_by(title,version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
View(proportionsByItem)
fineTuneDataSet <- proportionsByItem %>%
inner_join(d %>% select(title,version,header,continuation))
View(fineTuneDataSet)
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(title,version,header,continuation)))
View(fineTuneDataSet)
write_csv(fineTuneDataSet, "../../results/1_falseconsensus/fineTuneDataSet.csv")
proportionsByItem <- transformed %>%
group_by(title,version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation)))
write_csv(fineTuneDataSet, "../../results/1_falseconsensus/fineTuneDataSet.csv")
library(tidyverse)
library(jsonlite)
library(Hmisc)
library(binom)
library(brms)
library(EnvStats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
rm(list = ls())
library(tidyverse)
library(jsonlite)
library(Hmisc)
library(binom)
library(brms)
library(EnvStats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
source("../helpers.R")
# load core dataset
d <- read_csv("../../results/1_falseconsensus/main-merged.csv")
# load extra information
metadata = read_csv("../../experiments/1_falseconsensus/main/stimuli.csv") %>%
select(Title, version, locus_of_uncertainty, locus_of_uncertainty_location,name_gender) %>%
rename(title=Title)
d = d %>%
left_join(metadata,by=c("title","version"))
nonEnglishNativeLanguages <- c("Chinese", "Spanish", "spanish", "Punjabi", "Filipino", "Urdu")
excludedWorkers_nonNative <- unique((d %>%
filter(subject_information.language %in% nonEnglishNativeLanguages))$workerid)
excludedWorkers <- (d %>%
filter((version == "unambiguous_uncovered" & individual_judgment == "yes") |
(version == "unambiguous_covered" & individual_judgment == "no")) %>%
group_by(workerid) %>%
summarise(n = n()) %>%
filter(n > 1))$workerid
d <- d %>%
filter(!(workerid %in% excludedWorkers)) %>%
filter(!(workerid %in% excludedWorkers_nonNative))
transformed <- d %>%
select(workerid,title,version,individual_judgment,population_judgment,confidence,locus_of_uncertainty,locus_of_uncertainty_location,name_gender) %>%
group_by(version,title) %>%
mutate(total = n()) %>%
ungroup() %>%
group_by(version,title,individual_judgment,locus_of_uncertainty_location,name_gender) %>%
mutate(count = n()) %>%
mutate(true_proportion = binom.confint(x = count, n  = total, methods = "exact")$mean * 100,
ci_low = binom.confint(x = count, n  = total, methods = "exact")$lower * 100,
ci_high = binom.confint(x = count, n  = total, methods = "exact")$upper * 100,
agreement_mean = mean(population_judgment)) %>%
mutate(difference = as.numeric(population_judgment) - true_proportion) %>%
mutate(versionPretty = factor(version))
levels(transformed$versionPretty)
levels(transformed$versionPretty) <- c("Controversial", "Covered", "Not\ncovered")
proportionsByItem <- transformed %>%
group_by(title,version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation)))
View(fineTuneDataSet)
View(fineTuneDataSet)
View(fineTuneDataSet)
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) %>%
mutate(discreteLabel = case_when(propYes > .9 ~ "consensus_covered",
propYes < 0.1 ~ "consensus_not_covered",
TRUE ~ "no_consensus"))
table(fineTuneDataSet$discreteLabel)
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) %>%
mutate(discreteLabel = case_when(propYes > .8 ~ "consensus_covered",
propYes < 0.2 ~ "consensus_not_covered",
TRUE ~ "no_consensus"))
table(fineTuneDataSet$discreteLabel)
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) %>%
mutate(discreteLabel = case_when(propYes > .9 ~ "consensus_covered",
propYes < 0.1 ~ "consensus_not_covered",
TRUE ~ "no_consensus"))
table(fineTuneDataSet$discreteLabel)
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) %>%
mutate(discreteLabel = case_when(propYes > .8 ~ "consensus_covered",
propYes > .6 ~ "leans_covered",
propYes > .4 ~ "no_consensus",
propYes > .2 ~ "leans_not_covered"
TRUE ~ "consensus_not_covered"))
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) %>%
mutate(discreteLabel = case_when(propYes > .8 ~ "consensus_covered",
propYes > .6 ~ "leans_covered",
propYes > .4 ~ "no_consensus",
propYes > .2 ~ "leans_not_covered",
TRUE ~ "consensus_not_covered"))
table(fineTuneDataSet$discreteLabel)
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) %>%
mutate(discreteLabel = case_when(propYes > .8 ~ "consensus_covered",
propYes > .6 ~ "leans_covered",
propYes > .4 ~ "no_consensus",
propYes > .2 ~ "leans_not_covered",
TRUE ~ "consensus_not_covered"))
table(fineTuneDataSet$discreteLabel)
write_csv(fineTuneDataSet, "../../results/1_falseconsensus/fineTuneDataSet.csv")
rm(list = ls())
library(tidyverse)
library(jsonlite)
library(Hmisc)
library(binom)
library(brms)
library(EnvStats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
theme_set(theme_bw())
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
source("../helpers.R")
# load core dataset
d <- read_csv("../../results/1_falseconsensus/main-merged.csv")
# load extra information
metadata = read_csv("../../experiments/1_falseconsensus/main/stimuli.csv") %>%
select(Title, version, locus_of_uncertainty, locus_of_uncertainty_location,name_gender) %>%
rename(title=Title)
d = d %>%
left_join(metadata,by=c("title","version"))
nonEnglishNativeLanguages <- c("Chinese", "Spanish", "spanish", "Punjabi", "Filipino", "Urdu")
excludedWorkers_nonNative <- unique((d %>%
filter(subject_information.language %in% nonEnglishNativeLanguages))$workerid)
excludedWorkers <- (d %>%
filter((version == "unambiguous_uncovered" & individual_judgment == "yes") |
(version == "unambiguous_covered" & individual_judgment == "no")) %>%
group_by(workerid) %>%
summarise(n = n()) %>%
filter(n > 1))$workerid
d <- d %>%
filter(!(workerid %in% excludedWorkers)) %>%
filter(!(workerid %in% excludedWorkers_nonNative))
transformed <- d %>%
select(workerid,title,version,individual_judgment,population_judgment,confidence,locus_of_uncertainty,locus_of_uncertainty_location,name_gender) %>%
group_by(version,title) %>%
mutate(total = n()) %>%
ungroup() %>%
group_by(version,title,individual_judgment,locus_of_uncertainty_location,name_gender) %>%
mutate(count = n()) %>%
mutate(true_proportion = binom.confint(x = count, n  = total, methods = "exact")$mean * 100,
ci_low = binom.confint(x = count, n  = total, methods = "exact")$lower * 100,
ci_high = binom.confint(x = count, n  = total, methods = "exact")$upper * 100,
agreement_mean = mean(population_judgment)) %>%
mutate(difference = as.numeric(population_judgment) - true_proportion) %>%
mutate(versionPretty = factor(version))
levels(transformed$versionPretty)
levels(transformed$versionPretty) <- c("Controversial", "Covered", "Not\ncovered")
proportionsByItem <- transformed %>%
group_by(title,version) %>%
mutate(yes = case_when(individual_judgment == "yes" ~ 1,
TRUE ~ 0),
no = case_when(individual_judgment == "no" ~ 1,
TRUE ~ 0),
cantdecide = case_when(individual_judgment == "cantdecide" ~ 1,
TRUE ~ 0)) %>%
summarise(nYes = sum(yes), nNo =sum(no), nCantDecide = sum(cantdecide),
propYes = sum(yes)/n(), propNo = sum(no)/n(), propCantDecide = sum(cantdecide)/n())
fineTuneDataSet <- proportionsByItem %>%
inner_join(unique(d %>% select(item,title,version,header,continuation))) # %>%
write_csv(fineTuneDataSet, "../../results/1_falseconsensus/fineTuneDataSet.csv")
